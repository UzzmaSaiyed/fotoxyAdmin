"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path
from django.core.mail.backends.smtp import EmailBackend


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8%hozvn5^wyw7o((yp$0nxx9^#*k072dxqr6q$=fsp5@vi8m!('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['10.0.2.2','127.0.0.1']
#It is working for 127.0.0.1
# ALLOWED_HOSTS = ['127.0.0.1']
# ALLOWED_HOSTS = ['127.0.0.1','0.0.0.0']
# ALLOWED_HOSTS = ['106.221.64.60','127.0.0.1','0.0.0.0']
# ALLOWED_HOSTS = ['106.216.87.24']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    #'admin_argon.apps.AdminArgonConfig',
    'admin_material.apps.AdminMaterialDashboardConfig',
    #if admin logs out it will give some error of url just comment the above login to admin and uncomment again
    # "admin_interface",
    # "colorfield",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'rest_framework',
    # 'rest_framework_simplejwt.token_blacklist',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    # 'corsheaders'
]

MIDDLEWARE = [
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fotoxy',
        'USER':'root',
        'PASSWORD':'',
        'HOST':'127.0.0.1',
        'PORT':'3307',      
    }
    
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'database-1',
#         'USER':'fotoxy',
#         'PASSWORD':'Pgdca32#',
#         'HOST':'database-1.c7s8qw0qqvtf.ap-southeast-2.rds.amazonaws.com',
#         'PORT':'3306',

#     }

# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

MEDIA_URL = '//' 
MEDIA_ROOT = os.path.join(BASE_DIR, '')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
# to give theme in pythonanywhere
# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'static'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8001",
#     "http://127.0.0.1:8001",
#     # Add other origins as needed
# ]

# AUTH_USER_MODEL = 'api.Photographer'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.TokenAuthentication',
        'api.cust_auth.CustomJWTAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',

    ],
    'SIMPLE_JWT': {
        'TOKEN_TYPE_CLAIM': 'token_type',
        'ACCESS_TOKEN_LIFETIME': timedelta(minutes=350),
        'REFRESH_TOKEN_LIFETIME': timedelta(days=10),
        'ROTATE_REFRESH_TOKENS': True,
        'BLACKLIST_AFTER_ROTATION': True,
        'UPDATE_LAST_LOGIN': False,
        'ALGORITHM': 'HS256',
        'SIGNING_KEY': None,
        'VERIFYING_KEY': None,
        'USER_ID_FIELD': 'id',
        'USER_ID_CLAIM': 'user_id',
        # 'AUTH_TOKEN_CLASSES': ('api.models.CustomToken',),
    },

}

AUTHENTICATION_BACKENDS = [
    # 'api.custom_auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE=86400

ROTATE_REFRESH_TOKENS = True
BLACKLIST_AFTER_ROTATION = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # SMTP server address
EMAIL_PORT = 465  # SMTP server port
# EMAIL_USE_TLS = True  # Whether to use TLS (Transport Layer Security) for encryption
EMAIL_HOST_USER = 'uzzu4074@gmail.com'  # SMTP server username
EMAIL_HOST_PASSWORD = 'mlqydqtrwjvivfvq'
EMAIL_USE_SSL = True
